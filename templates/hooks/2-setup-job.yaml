{{- if .Values.enabled }}
  {{- if .Values.prometheus.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
    "helm.sh/hook-weight": "2"
  name: '{{ include "neurox-workload.fullname" . }}-setup-job-hook'
  namespace: "{{ .Release.Namespace }}"
data:
  prometheus.yaml: |
    apiVersion: monitoring.coreos.com/v1
    kind: Prometheus
    metadata:
      name: '{{ include "neurox-workload.fullname" . }}-metrics-forwarder'
      namespace: "{{ .Release.Namespace }}"
    spec:
      replicas: 1
      scrapeInterval: 15s
      evaluationInterval: 15s
      remoteWrite:
        - url: '{{ include "neurox-workload.prometheus.remoteWriteUrl" . }}'
          writeRelabelConfigs:
            - targetLabel: neurox_cluster
              replacement: ${CLUSTER_ID}
            - sourceLabels: [__name__]
              regex: '{{ include "neurox-workload.prometheus.metricFilter" . }}'
              action: keep
      serviceAccountName: '{{ include "neurox-workload.fullname" . }}-prometheus'
      serviceMonitorNamespaceSelector: {}
      serviceMonitorSelector: {}
  {{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: '{{ include "neurox-workload.fullname" . }}-setup-job-hook'
  namespace: "{{ .Release.Namespace }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "4"
spec:
  backoffLimit: 1
  template:
    spec:
    {{- if .Values.global.scheduling.affinity }}
      affinity: {{ toYaml .Values.global.scheduling.affinity | nindent 8 }}
    {{- end }}
      containers:
        - name: create-configmap-and-prometheus
          image: "{{ .Values.hooks.image.repository }}:{{ .Values.hooks.image.tag }}"
          command:
            - /bin/sh
            - -c
            - |
              generate_uuid() {
                cat /proc/sys/kernel/random/uuid
              }

              if kubectl get configmap ${WORKLOAD_CLUSTER_CONFIGMAP_NAME} -n ${NAMESPACE}
              then
                echo "ConfigMap ${WORKLOAD_CLUSTER_CONFIGMAP_NAME} already exists, skipping creation..."
                CLUSTER_ID=$(kubectl get configmap ${WORKLOAD_CLUSTER_CONFIGMAP_NAME} -n ${NAMESPACE} -o jsonpath="{.data.${WORKLOAD_CLUSTER_CONFIGMAP_KEY_NAME}}")
              else
                echo "Generating uuid..."
                CLUSTER_ID=$(generate_uuid)

                echo "Creating ${WORKLOAD_CLUSTER_CONFIGMAP_NAME} ConfigMap..."
                kubectl create configmap ${WORKLOAD_CLUSTER_CONFIGMAP_NAME} \
                  --namespace ${NAMESPACE} \
                  --from-literal=${WORKLOAD_CLUSTER_CONFIGMAP_KEY_NAME}=${CLUSTER_ID}
              fi

              if [ -z ${CLUSTER_ID} ]
              then
                echo "Error: No cluster ID found, exiting in error..."
                exit 1
              fi

            {{- if .Values.prometheus.enabled }}
              cat /config/prometheus.yaml | sed "s/\${CLUSTER_ID}/${CLUSTER_ID}/g" | kubectl apply -f -
            {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WORKLOAD_CLUSTER_CONFIGMAP_NAME
              value: "{{ .Values.global.configmap.name }}"
            - name: WORKLOAD_CLUSTER_CONFIGMAP_KEY_NAME
              value: "{{ .Values.global.configmap.key }}"
        {{- if .Values.prometheus.enabled }}
          volumeMounts:
            - name: prometheus-config
              mountPath: /config
        {{- end }}
    {{- if .Values.global.scheduling.nodeSelector }}
      nodeSelector: {{ toYaml .Values.global.scheduling.nodeSelector | nindent 8 }}
    {{- end }}
      restartPolicy: Never
      serviceAccountName: '{{ include "neurox-workload.fullname" . }}-setup-job-hook'
    {{- if .Values.global.scheduling.tolerations }}
      tolerations: {{ toYaml .Values.global.scheduling.tolerations | nindent 8 }}
    {{- end }}
    {{- if .Values.prometheus.enabled }}
      volumes:
        - name: prometheus-config
          configMap:
            name: '{{ include "neurox-workload.fullname" . }}-setup-job-hook'
    {{- end }}
{{- end }}
