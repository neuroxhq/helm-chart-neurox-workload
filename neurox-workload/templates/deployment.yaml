{{- if .Values.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ include "neurox-workload.fullname" . }}-relay-client'
  namespace: "{{ .Release.Namespace }}"
spec:
  selector:
    matchLabels:
      app: '{{ include "neurox-workload.fullname" . }}-relay-client'
  template:
    metadata:
      labels:
        app: '{{ include "neurox-workload.fullname" . }}-relay-client'
        controlHostHash: '{{ (include "neurox-workload.relay.server.address" .) | sha256sum | trunc 10 }}'
        version: "{{ .Chart.Version }}"
    spec:
    {{- if .Values.global.scheduling.affinity }}
      affinity: {{ toYaml .Values.global.scheduling.affinity | nindent 8 }}
    {{- end }}
      containers:
      - name: neurox-workload-relay-client
        image: "{{ .Values.relay.image.run.repository }}:{{ .Values.relay.image.run.tag }}"
        imagePullPolicy: '{{ include "neurox-workload.relay.image.run.pullPolicy" . }}'
        args:
          - -C=/etc/neurox-workload-relay-client/config.yaml
        volumeMounts:
        - name: final-config
          mountPath: /etc/neurox-workload-relay-client
      initContainers:
      - name: '{{ include "neurox-workload.fullname" . }}-relay-client-init'
        image: "{{ .Values.relay.image.init.repository }}:{{ .Values.relay.image.init.tag }}"
        imagePullPolicy: '{{ include "neurox-workload.relay.image.init.pullPolicy" . }}'
        command:
        - bin/sh
        - -c
        - |
          wait_for_service() {
            local friendly_name="$1"
            local service_host="$2"
            local service_port="$3"
            local sleep_interval="${4:-5}" # Default sleep interval to 5 seconds if not provided

            echo "Checking availability of $friendly_name at $service_host:$service_port..."

            while ! nc -z "$service_host" "$service_port"; do
              echo "$friendly_name is not available at $service_host:$service_port. Retrying in $sleep_interval seconds..."
              sleep "$sleep_interval"
            done

            echo "$friendly_name is now available at $service_host:$service_port."
          }

          wait_for_service "Workload Manager" {{ include "neurox-workload.manager.service.name" . }} {{ .Values.manager.service.port }}

          cp /config/original/config.yaml /config/final/config.yaml && \
          sed -i "s/\${CLUSTER_ID}/${CLUSTER_ID}/g" /config/final/config.yaml
        env:
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: "{{ .Values.global.configmap.name }}"
              key: "{{ .Values.global.configmap.key }}"
        volumeMounts:
        - name: original-config
          mountPath: /config/original
        - name: final-config
          mountPath: /config/final
    {{- if .Values.global.scheduling.nodeSelector }}
      nodeSelector: {{ toYaml .Values.global.scheduling.nodeSelector | nindent 8 }}
    {{- end }}
      serviceAccountName: '{{ include "neurox-workload.fullname" . }}-relay-client'
    {{- if .Values.global.scheduling.tolerations }}
      tolerations: {{ toYaml .Values.global.scheduling.tolerations | nindent 8 }}
    {{- end }}
      volumes:
      - name: original-config
        configMap:
          name: '{{ include "neurox-workload.fullname" . }}-relay-client'
      - name: final-config
        emptyDir: {}
{{- end }}
