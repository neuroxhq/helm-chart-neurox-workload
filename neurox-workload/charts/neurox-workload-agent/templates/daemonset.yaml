---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: '{{ include "neurox-workload-agent.fullname" . }}'
  namespace: "{{ .Release.Namespace }}"
spec:
  selector:
    matchLabels:
      app: '{{ include "neurox-workload-agent.fullname" . }}'
  template:
    metadata:
      labels:
        app: '{{ include "neurox-workload-agent.fullname" . }}'
    spec:
      containers:
        - name: neurox-workload-agent
          image: '{{ include "neurox-workload-agent.image.registry" . }}:{{.Values.image.tag | default .Chart.AppVersion }}'
          imagePullPolicy: '{{ include "neurox-workload-agent.image.pullPolicy" . }}'
          env:
          - name: FASTIFY_PORT
            value: '{{ .Values.service.containerPort }}'
          - name: FASTIFY_LOG_LEVEL
            value: '{{ .Values.global.log.level }}'
          - name: FASTIFY_LOG_REQUESTS
            value: '{{ .Values.global.log.requests }}'
          - name: FASTIFY_PRETTY_LOGS
            value: '{{ .Values.global.log.pretty }}'
          - name: METRICS_INTERVAL
            value: '{{ .Values.metricsInterval }}'
          - name: NODE_ENV
            value: production
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- if .Values.mockData }}
          - name: MOCK_DATA
            value: '{{ .Values.mockData }}'
          {{- end }}
          ports:
          - containerPort: {{ .Values.service.containerPort }}
            name: metrics
            protocol: TCP
          securityContext:
            privileged: true
        {{- if .Values.mockData }}
          volumeMounts:
            - name: runtime-socket
              mountPath: /var/run/containerd/containerd.sock
        {{- end }}
      hostPID: true
      nodeSelector:
        nvidia.com/gpu.present: "true"
      serviceAccountName: '{{ include "neurox-workload-agent.fullname" . }}'
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
    {{- if .Values.mockData }}
      volumes:
        - name: runtime-socket
          hostPath:
            path: /var/run/containerd/containerd.sock
    {{- end }}
